{
  "version": 3,
  "sources": ["../../../../Modules/Reporting/ReportPage.ts", "../../../../Modules/Reporting/ReportDialog.ts", "../../../../Modules/Reporting/ReportHelper.ts"],
  "sourcesContent": ["import { Decorators, QuickSearchInput, Widget } from \"@serenity-is/corelib\";\nimport { coalesce, trimToNull } from \"@serenity-is/corelib\";\nimport { ReportDialog } from \"./ReportDialog\";\n\n@Decorators.registerClass(\"Serenity.Extensions.ReportPage\")\nexport class ReportPage extends Widget<any> {\n\n    constructor(element: JQuery) {\n        super(element);\n\n        $('.report-link', element).click(e => this.reportLinkClick(e));\n\n        new QuickSearchInput($('.s-QuickSearchBar input', element), {\n            onSearch: (field, text, done) => {\n                this.updateMatchFlags(text);\n                done(true);\n            }\n        });\n    }\n\n    protected updateMatchFlags(text: string) {\n        var liList = $('.report-list', this.element).find('li').removeClass('non-match');\n        text = trimToNull(text);\n\n        if (!text)\n            return;\n\n        text = Select2.util.stripDiacritics(text).toUpperCase();\n\n        var reportItems = liList.filter('.report-item');\n        reportItems.each(function (ix, e) {\n            var x = $(e);\n            var title = Select2.util.stripDiacritics(coalesce(x.text(), '').toUpperCase());\n            if (title.indexOf(text) < 0) {\n                x.addClass('non-match');\n            }\n        });\n\n        var matchingItems = reportItems.not('.non-match');\n        var visibles = matchingItems.parents('li').add(matchingItems);\n        visibles.children('[data-bs-toggle]:not([aria-expanded=true])')\n            .attr('aria-expanded', 'true')\n            .removeClass('collapsed');\n        visibles\n            .parent('.collapse:not(.show)')\n            .addClass('show');\n\n        var nonVisibles = liList.not(visibles);\n        nonVisibles.addClass('non-match');\n    }\n\n    protected reportLinkClick(e) {\n        e.preventDefault();\n        new ReportDialog({\n            reportKey: $(e.target).data('key')\n        }).dialogOpen();\n    }\n}\n", "import { Decorators, PropertyGrid, TemplatedDialog } from \"@serenity-is/corelib\";\nimport { resolveUrl, serviceCall } from \"@serenity-is/corelib\";\nimport { ReportRetrieveResult } from \"@/ServerTypes/Reporting\";\nimport { ReportHelper } from \"./ReportHelper\";\n\n@Decorators.registerClass(\"Serenity.Extensions.ReportDialog\")\nexport class ReportDialog extends TemplatedDialog<ReportDialogOptions> {\n\n    private report: ReportRetrieveResult;\n    private propertyGrid: PropertyGrid;\n\n    constructor(options: ReportDialogOptions) {\n        super(options);\n\n        this.updateInterface();\n        this.loadReport(this.options.reportKey);\n    }\n\n    protected getDialogButtons() {\n        return null;\n    }\n\n    protected createPropertyGrid() {\n        this.propertyGrid && this.byId('PropertyGrid').html('').attr('class', '');\n        this.propertyGrid = new PropertyGrid(this.byId('PropertyGrid'), {\n            idPrefix: this.idPrefix,\n            useCategories: true,\n            items: this.report.Properties\n        }).init(null);\n    }\n\n    protected loadReport(reportKey: string) {\n        serviceCall({\n            url: resolveUrl('~/Serenity.Extensions/Report/Retrieve'),\n            request: {\n                ReportKey: reportKey\n            },\n            onSuccess: response => {\n                this.report = response as ReportRetrieveResult;\n                this.dialogTitle = this.report.Title;\n                this.createPropertyGrid();\n                this.propertyGrid.load(this.report.InitialSettings || {});\n                this.updateInterface();\n                this.dialogOpen();\n            }\n        });\n    }\n\n    protected updateInterface() {\n        this.toolbar.findButton('print-preview-button')\n            .toggle(this.report && !this.report.IsDataOnlyReport && !this.report.IsExternalReport);\n\n        this.toolbar.findButton('run-button')\n            .toggle(this.report && this.report.IsExternalReport);\n\n        this.toolbar.findButton('export-pdf-button')\n            .toggle(this.report && !this.report.IsDataOnlyReport && !this.report.IsExternalReport);\n\n        this.toolbar.findButton('export-xlsx-button')\n            .toggle(this.report && this.report.IsDataOnlyReport && !this.report.IsExternalReport);\n    }\n\n    executeReport(target: string, ext: string, download: boolean) {\n        if (!this.validateForm()) {\n            return;\n        }\n\n        var opt = {};\n        this.propertyGrid.save(opt);\n        ReportHelper.execute({\n            download: download,\n            reportKey: this.report.ReportKey,\n            extension: ext as any,\n            target: target,\n            params: opt\n        });\n    }\n\n    getToolbarButtons() {\n        return [\n            {\n                title: 'Preview',\n                cssClass: 'print-preview-button',\n                onClick: () => this.executeReport('_blank', null, false)\n            },\n            {\n                title: 'Run',\n                cssClass: 'run-button',\n                icon: 'fa-print text-blue',\n                onClick: () => this.executeReport('_blank', null, false)\n            },\n            {\n                title: 'PDF',\n                cssClass: 'export-pdf-button',\n                onClick: () => this.executeReport('_blank', 'pdf', true)\n            },\n            {\n                title: 'Excel',\n                cssClass: 'export-xlsx-button',\n                onClick: () => this.executeReport('_blank', 'xlsx', true)\n            }\n        ];\n    }\n\n    getTemplate() {\n        return `<div class=\"s-DialogContent\">\n<div id=\"~_Toolbar\" class=\"s-DialogToolbar\">\n</div>\n<div class=\"s-Form\">\n    <form id=\"~_Form\" action=\"\">\n        <div class=\"fieldset ui-widget ui-widget-content ui-corner-all\">\n            <div id=\"~_PropertyGrid\"></div>\n            <div class=\"clear\"></div>\n        </div>\n    </form>\n</div>\n</div>`;\n\n    }\n}\n\nexport interface ReportDialogOptions {\n    reportKey: string;\n}", "import { ToolButton } from \"@serenity-is/corelib\";\nimport { coalesce, postToUrl } from \"@serenity-is/corelib\";\n\nexport interface ReportExecuteOptions {\n    reportKey: string;\n    download?: boolean;\n    extension?: 'pdf' | 'htm' | 'html' | 'xlsx' | 'docx';\n    getParams?: () => any;\n    params?: { [key: string]: any }\n    target?: string;\n}\n\nexport interface ReportButtonOptions extends ReportExecuteOptions {\n    title?: string;\n    cssClass?: string;\n    icon?: string;\n}\n\nexport namespace ReportHelper {\n\n    export function createToolButton(options: ReportButtonOptions): ToolButton {\n        return {\n            title: coalesce(options.title, 'Report'),\n            cssClass: coalesce(options.cssClass, 'print-button'),\n            icon: options.icon,\n            onClick: () => {\n                ReportHelper.execute(options);\n            }\n        };\n    }\n\n    export function execute(options: ReportExecuteOptions) {\n        var opt = options.getParams ? options.getParams() : options.params;\n\n        postToUrl({\n            url: '~/Serenity.Extensions/Report/' + (options.download ? 'Download' : 'Render'),\n            params: {\n                key: options.reportKey,\n                ext: coalesce(options.extension, 'pdf'),\n                opt: opt ? $.toJSON(opt) : ''\n            },\n            target: coalesce(options.target, '_blank')\n        });\n    }\n}"],
  "mappings": "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",
  "names": ["import_corelib", "import_corelib", "import_corelib", "ReportHelper", "createToolButton", "options", "__name", "execute", "opt", "ReportDialog", "options", "reportKey", "response", "target", "ext", "download", "opt", "ReportHelper", "__name", "__decorateClass", "ReportPage", "element", "e", "field", "text", "done", "liList", "reportItems", "ix", "x", "title", "matchingItems", "visibles", "nonVisibles", "ReportDialog", "__name", "__decorateClass"]
}
