{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Default/BrandColumns.ts", "../../../Modules/ServerTypes/Default/BrandRow.ts", "../../../Modules/ServerTypes/Default/BrandService.ts", "../../../Modules/ServerTypes/Default/CategoryColumns.ts", "../../../Modules/ServerTypes/Default/CategoryRow.ts", "../../../Modules/ServerTypes/Default/CategoryService.ts", "../../../Modules/ServerTypes/Default/ItemColumns.ts", "../../../Modules/ServerTypes/Default/ItemRow.ts", "../../../Modules/ServerTypes/Default/ItemService.ts", "../../../Modules/ServerTypes/Default/MealsColumns.ts", "../../../Modules/ServerTypes/Default/MealsRow.ts", "../../../Modules/ServerTypes/Default/MealsService.ts", "../../../Modules/Default/Product/CategryFormatter.ts", "../../../Modules/ServerTypes/Default/BrandForm.ts", "../../../Modules/ServerTypes/Default/CategoryForm.ts", "../../../Modules/ServerTypes/Default/ItemForm.ts", "../../../Modules/ServerTypes/Default/MealsForm.ts", "../../../Modules/Default/Category/CategoryDialog.ts", "../../../Modules/ServerTypes/Default/ProductForm.ts", "../../../Modules/ServerTypes/Default/ProductRow.ts", "../../../Modules/ServerTypes/Default/ProductService.ts", "../../../Modules/ServerTypes/Default/ProductColumns.ts"],
  "sourcesContent": ["\uFEFFimport { ImageViewerFormatter } from \"@/Default/Product/ImageViewerFormatter\";\nimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { BrandRow } from \"./BrandRow\";\n\nexport interface BrandColumns {\n    Id: Column<BrandRow>;\n    BrandName: Column<BrandRow>;\n    Photo: Column<BrandRow>;\n    PhoneNember: Column<BrandRow>;\n    WhtasApp: Column<BrandRow>;\n    FaceBook: Column<BrandRow>;\n    Twitter: Column<BrandRow>;\n    Instagram: Column<BrandRow>;\n    Tiktok: Column<BrandRow>;\n    Telegram: Column<BrandRow>;\n    Description: Column<BrandRow>;\n}\n\nexport class BrandColumns extends ColumnsBase<BrandRow> {\n    static readonly columnsKey = 'Default.Brand';\n    static readonly Fields = fieldsProxy<BrandColumns>();\n}\n\n[ImageViewerFormatter]; // referenced types", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface BrandRow {\n    Id?: number;\n    BrandName?: string;\n    Photo?: string;\n    PhoneNember?: string;\n    WhtasApp?: string;\n    FaceBook?: string;\n    Twitter?: string;\n    Instagram?: string;\n    Tiktok?: string;\n    Telegram?: string;\n    Description?: string;\n}\n\nexport abstract class BrandRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'BrandName';\n    static readonly localTextPrefix = 'Default.Brand';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<BrandRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { BrandRow } from \"./BrandRow\";\n\nexport namespace BrandService {\n    export const baseUrl = 'Default/Brand';\n\n    export declare function Create(request: SaveRequest<BrandRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<BrandRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<BrandRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<BrandRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Default/Brand/Create\",\n        Update: \"Default/Brand/Update\",\n        Delete: \"Default/Brand/Delete\",\n        Retrieve: \"Default/Brand/Retrieve\",\n        List: \"Default/Brand/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>BrandService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ImageViewerFormatter } from \"@/Default/Product/ImageViewerFormatter\";\nimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { CategoryRow } from \"./CategoryRow\";\n\nexport interface CategoryColumns {\n    Id: Column<CategoryRow>;\n    CategoryName: Column<CategoryRow>;\n    Photo: Column<CategoryRow>;\n}\n\nexport class CategoryColumns extends ColumnsBase<CategoryRow> {\n    static readonly columnsKey = 'Default.Category';\n    static readonly Fields = fieldsProxy<CategoryColumns>();\n}\n\n[ImageViewerFormatter]; // referenced types", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CategoryRow {\n    Id?: number;\n    CategoryName?: string;\n    Photo?: string;\n    Description?: string;\n}\n\nexport abstract class CategoryRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'CategoryName';\n    static readonly localTextPrefix = 'Default.Category';\n    static readonly lookupKey = 'Default.Category';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<CategoryRow>('Default.Category') }\n    static async getLookupAsync() { return getLookupAsync<CategoryRow>('Default.Category') }\n\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<CategoryRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { CategoryRow } from \"./CategoryRow\";\n\nexport namespace CategoryService {\n    export const baseUrl = 'Default/Category';\n\n    export declare function Create(request: SaveRequest<CategoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CategoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Default/Category/Create\",\n        Update: \"Default/Category/Update\",\n        Delete: \"Default/Category/Delete\",\n        Retrieve: \"Default/Category/Retrieve\",\n        List: \"Default/Category/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CategoryService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ImageViewerFormatter } from \"@/Default/Product/ImageViewerFormatter\";\nimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { ItemRow } from \"./ItemRow\";\n\nexport interface ItemColumns {\n    Id: Column<ItemRow>;\n    ItemName: Column<ItemRow>;\n    Photo: Column<ItemRow>;\n    Description: Column<ItemRow>;\n    MealsName: Column<ItemRow>;\n}\n\nexport class ItemColumns extends ColumnsBase<ItemRow> {\n    static readonly columnsKey = 'Default.Item';\n    static readonly Fields = fieldsProxy<ItemColumns>();\n}\n\n[ImageViewerFormatter]; // referenced types", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface ItemRow {\n    Id?: number;\n    ItemName?: string;\n    Photo?: string;\n    Description?: string;\n    MealsId?: number;\n    MealsName?: string;\n}\n\nexport abstract class ItemRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'ItemName';\n    static readonly localTextPrefix = 'Default.Item';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<ItemRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { ItemRow } from \"./ItemRow\";\n\nexport namespace ItemService {\n    export const baseUrl = 'Default/Item';\n\n    export declare function Create(request: SaveRequest<ItemRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ItemRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ItemRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ItemRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Default/Item/Create\",\n        Update: \"Default/Item/Update\",\n        Delete: \"Default/Item/Delete\",\n        Retrieve: \"Default/Item/Retrieve\",\n        List: \"Default/Item/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ItemService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ImageViewerFormatter } from \"@/Default/Product/ImageViewerFormatter\";\nimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { MealsRow } from \"./MealsRow\";\n\nexport interface MealsColumns {\n    Id: Column<MealsRow>;\n    MealsName: Column<MealsRow>;\n    Photo: Column<MealsRow>;\n    Description: Column<MealsRow>;\n    Price: Column<MealsRow>;\n    PriceBefor: Column<MealsRow>;\n    Currency: Column<MealsRow>;\n}\n\nexport class MealsColumns extends ColumnsBase<MealsRow> {\n    static readonly columnsKey = 'Default.Meals';\n    static readonly Fields = fieldsProxy<MealsColumns>();\n}\n\n[ImageViewerFormatter]; // referenced types", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface MealsRow {\n    Id?: number;\n    MealsName?: string;\n    Photo?: string;\n    Description?: string;\n    Price?: number;\n    PriceBefor?: number;\n    Currency?: string;\n    CategoryMealsId?: number;\n    CategoryMealsName?: string;\n}\n\nexport abstract class MealsRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'MealsName';\n    static readonly localTextPrefix = 'Default.Meals';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<MealsRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { MealsRow } from \"./MealsRow\";\n\nexport namespace MealsService {\n    export const baseUrl = 'Default/Meals';\n\n    export declare function Create(request: SaveRequest<MealsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MealsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MealsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MealsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Default/Meals/Create\",\n        Update: \"Default/Meals/Update\",\n        Delete: \"Default/Meals/Delete\",\n        Retrieve: \"Default/Meals/Retrieve\",\n        List: \"Default/Meals/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MealsService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "import { Decorators, Formatter, Lookup } from \"@serenity-is/corelib\";\r\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\r\nimport { CategoryRow } from \"../../ServerTypes/Default\";\r\n\r\n\r\n@Decorators.registerFormatter('Restaurant.BrandFormatter')\r\nexport class CategortFormatter implements Formatter {\r\n\r\n    format(ctx: FormatterContext) {\r\n\r\n        let CategoryId = ctx.value;\r\n        if (!CategoryId)\r\n            return `<span class=\"text-dangere\">--------</span>`\r\n        else {\r\n            return CategoryRow.getLookup().items.filter(x => x.Id == CategoryId)[0].CategoryName;\r\n        }\r\n    }\r\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface BrandForm {\n    BrandName: StringEditor;\n    Photo: StringEditor;\n    PhoneNember: StringEditor;\n    WhtasApp: StringEditor;\n    FaceBook: StringEditor;\n    Twitter: StringEditor;\n    Instagram: StringEditor;\n    Tiktok: StringEditor;\n    Telegram: StringEditor;\n    Description: StringEditor;\n}\n\nexport class BrandForm extends PrefixedContext {\n    static readonly formKey = 'Default.Brand';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!BrandForm.init)  {\n            BrandForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(BrandForm, [\n                'BrandName', w0,\n                'Photo', w0,\n                'PhoneNember', w0,\n                'WhtasApp', w0,\n                'FaceBook', w0,\n                'Twitter', w0,\n                'Instagram', w0,\n                'Tiktok', w0,\n                'Telegram', w0,\n                'Description', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, ImageUploadEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface CategoryForm {\n    CategoryName: StringEditor;\n    Photo: ImageUploadEditor;\n    Description: StringEditor;\n}\n\nexport class CategoryForm extends PrefixedContext {\n    static readonly formKey = 'Default.Category';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CategoryForm.init)  {\n            CategoryForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = ImageUploadEditor;\n\n            initFormType(CategoryForm, [\n                'CategoryName', w0,\n                'Photo', w1,\n                'Description', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, ImageUploadEditor, ServiceLookupEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface ItemForm {\n    ItemName: StringEditor;\n    Photo: ImageUploadEditor;\n    Description: StringEditor;\n    MealsId: ServiceLookupEditor;\n}\n\nexport class ItemForm extends PrefixedContext {\n    static readonly formKey = 'Default.Item';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ItemForm.init)  {\n            ItemForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = ImageUploadEditor;\n            var w2 = ServiceLookupEditor;\n\n            initFormType(ItemForm, [\n                'ItemName', w0,\n                'Photo', w1,\n                'Description', w0,\n                'MealsId', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { CategoryMealsDialog } from \"@/Default/CategoryMeals/CategoryMealsDialog\";\nimport { StringEditor, ImageUploadEditor, DecimalEditor, ServiceLookupEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface MealsForm {\n    MealsName: StringEditor;\n    Photo: ImageUploadEditor;\n    Description: StringEditor;\n    Price: DecimalEditor;\n    PriceBefor: DecimalEditor;\n    Currency: StringEditor;\n    CategoryMealsId: ServiceLookupEditor;\n}\n\nexport class MealsForm extends PrefixedContext {\n    static readonly formKey = 'Default.Meals';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MealsForm.init)  {\n            MealsForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = ImageUploadEditor;\n            var w2 = DecimalEditor;\n            var w3 = ServiceLookupEditor;\n\n            initFormType(MealsForm, [\n                'MealsName', w0,\n                'Photo', w1,\n                'Description', w0,\n                'Price', w2,\n                'PriceBefor', w2,\n                'Currency', w0,\n                'CategoryMealsId', w3\n            ]);\n        }\n    }\n}\n\n[CategoryMealsDialog]; // referenced types", "import { CategoryForm, CategoryRow, CategoryService } from '@/ServerTypes/Default';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('Restaurant.Default.CategoryDialog')\r\nexport class CategoryDialog extends EntityDialog<CategoryRow, any> {\r\n    protected getFormKey() { return CategoryForm.formKey; }\r\n    protected getRowDefinition() { return CategoryRow; }\r\n    protected getService() { return CategoryService.baseUrl; }\r\n\r\n    protected form = new CategoryForm(this.idPrefix);\r\n}", "\uFEFFimport { CategoryDialog } from \"@/Default/Category/CategoryDialog\";\nimport { StringEditor, DecimalEditor, ImageUploadEditor, ServiceLookupEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface ProductForm {\n    ProductName: StringEditor;\n    Description: StringEditor;\n    Price: DecimalEditor;\n    Currency: StringEditor;\n    PriceBefor: DecimalEditor;\n    Photo: ImageUploadEditor;\n    CategoryId: ServiceLookupEditor;\n}\n\nexport class ProductForm extends PrefixedContext {\n    static readonly formKey = 'Default.Product';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ProductForm.init)  {\n            ProductForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DecimalEditor;\n            var w2 = ImageUploadEditor;\n            var w3 = ServiceLookupEditor;\n\n            initFormType(ProductForm, [\n                'ProductName', w0,\n                'Description', w0,\n                'Price', w1,\n                'Currency', w0,\n                'PriceBefor', w1,\n                'Photo', w2,\n                'CategoryId', w3\n            ]);\n        }\n    }\n}\n\n[CategoryDialog]; // referenced types", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface ProductRow {\n    Id?: number;\n    ProductName?: string;\n    Description?: string;\n    Price?: number;\n    Currency?: string;\n    PriceBefor?: number;\n    Photo?: string;\n    CategoryId?: number;\n    CategoryName?: string;\n}\n\nexport abstract class ProductRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'ProductName';\n    static readonly localTextPrefix = 'Default.Product';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<ProductRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { ProductRow } from \"./ProductRow\";\n\nexport namespace ProductService {\n    export const baseUrl = 'Default/Product';\n\n    export declare function Create(request: SaveRequest<ProductRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ProductRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ProductRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ProductRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Default/Product/Create\",\n        Update: \"Default/Product/Update\",\n        Delete: \"Default/Product/Delete\",\n        Retrieve: \"Default/Product/Retrieve\",\n        List: \"Default/Product/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ProductService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { CategortFormatter } from \"@/Default/Product/CategryFormatter\";\nimport { ImageViewerFormatter } from \"@/Default/Product/ImageViewerFormatter\";\nimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { ProductRow } from \"./ProductRow\";\n\nexport interface ProductColumns {\n    Id: Column<ProductRow>;\n    ProductName: Column<ProductRow>;\n    Description: Column<ProductRow>;\n    Price: Column<ProductRow>;\n    Currency: Column<ProductRow>;\n    PriceBefor: Column<ProductRow>;\n    Photo: Column<ProductRow>;\n    CategoryId: Column<ProductRow>;\n}\n\nexport class ProductColumns extends ColumnsBase<ProductRow> {\n    static readonly columnsKey = 'Default.Product';\n    static readonly Fields = fieldsProxy<ProductColumns>();\n}\n\n[ImageViewerFormatter, CategortFormatter]; // referenced types"],
  "mappings": "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",
  "names": ["import_corelib", "_BrandColumns", "__name", "BrandColumns", "import_corelib", "_BrandRow", "__name", "BrandRow", "import_corelib", "BrandService", "x", "r", "s", "o", "import_corelib", "_CategoryColumns", "__name", "CategoryColumns", "import_corelib", "_CategoryRow", "__async", "__name", "CategoryRow", "import_corelib", "CategoryService", "x", "r", "s", "o", "import_corelib", "_ItemColumns", "__name", "ItemColumns", "import_corelib", "_ItemRow", "__name", "ItemRow", "import_corelib", "ItemService", "x", "r", "s", "o", "import_corelib", "_MealsColumns", "__name", "MealsColumns", "import_corelib", "_MealsRow", "__name", "MealsRow", "import_corelib", "MealsService", "x", "r", "s", "o", "import_corelib", "import_corelib", "_BrandForm", "prefix", "w0", "__name", "BrandForm", "import_corelib", "_CategoryForm", "prefix", "w0", "w1", "__name", "CategoryForm", "import_corelib", "_ItemForm", "prefix", "w0", "w1", "w2", "__name", "ItemForm", "import_corelib", "_MealsForm", "prefix", "w0", "w1", "w2", "w3", "__name", "MealsForm", "import_corelib", "CategoryDialog", "CategoryForm", "CategoryRow", "CategoryService", "__name", "__decorateClass", "import_corelib", "_ProductForm", "prefix", "w0", "w1", "w2", "w3", "__name", "ProductForm", "import_corelib", "_ProductRow", "__name", "ProductRow", "import_corelib", "ProductService", "x", "r", "s", "o", "CategortFormatter", "ctx", "CategoryId", "CategoryRow", "x", "__name", "__decorateClass", "import_corelib", "_ProductColumns", "__name", "ProductColumns"]
}
