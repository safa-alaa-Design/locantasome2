{
  "version": 3,
  "sources": ["../../../../../Modules/Membership/PasswordActions/SetPasswordPage.tsx"],
  "sourcesContent": ["/** @jsxImportSource jsx-dom */\nimport { Texts } from \"@/ServerTypes/Texts\";\nimport { TemplatedPanel } from \"@serenity-is/corelib\";\nimport { informationDialog, parseQueryString, resolveUrl, serviceCall } from \"@serenity-is/corelib\";\nimport { SendResetPasswordResponse } from \"../../ServerTypes/Extensions/SendResetPasswordResponse\";\n\nexport default function pageInit() {\n    new SetPasswordPage($('#PanelDiv')\n        .addClass('s-container-tight mt-5 s-Form'));\n}\n\nconst myTexts = Texts.Forms.Membership.ChangePassword;\n\nclass SetPasswordPage extends TemplatedPanel<any> {\n\n    protected submitClick() {\n        if (!this.validateForm())\n            return;\n\n        serviceCall({\n            url: resolveUrl('~/Account/SendResetPassword'),\n            onSuccess: (response: SendResetPasswordResponse) => {\n                if (response.DemoLink) {\n                    informationDialog(\"If this wasn't a demo we would send you a reset password email. \" +\n                        \"Since this is a demo we will just redirect you to set your password.\", () => {\n                        window.location.href = resolveUrl(response.DemoLink);\n                    });\n                }\n                else {\n                    informationDialog(myTexts.SetPasswordSuccess, () => {\n                        window.location.href = resolveUrl('~/');\n                    });\n                }\n            }\n        })\n    }\n\n    renderContents() {\n        this.element.empty().append(\n            <div class=\"s-Panel\">\n                <h3 class=\"page-title mb-4 text-center\">{myTexts.SetPassword}</h3>\n                {\n                    parseQueryString()[\"reason\"] == \"elevate\" ?\n                        <p>{myTexts.ElevatedActions}</p> :\n                        <p>{myTexts.SetPasswordInfo}</p>\n                }\n                <form>\n                    <button class=\"btn btn-primary w-100\" onClick={e => {\n                        e.preventDefault();\n                        this.submitClick()\n                    }}>{myTexts.SetPasswordButton}</button>\n                </form>\n            </div>\n        );\n    }\n}\n\n"],
  "mappings": "mIAEA,IAAAA,EAA+B,SAC/BA,EAA6E,SAG9D,SAARC,GAA4B,CAC/B,IAAIC,EAAgB,EAAE,WAAW,EAC5B,SAAS,+BAA+B,CAAC,CAClD,CAHwBC,EAAAF,EAAA,YAKxB,IAAMG,EAAUC,EAAM,MAAM,WAAW,eAEjCH,EAAN,cAA8B,gBAAoB,CAEpC,aAAc,CACf,KAAK,aAAa,MAGvB,eAAY,CACR,OAAK,cAAW,6BAA6B,EAC7C,UAAYI,GAAwC,CAC5CA,EAAS,YACT,qBAAkB,uIAC0D,IAAM,CAC9E,OAAO,SAAS,QAAO,cAAWA,EAAS,QAAQ,CACvD,CAAC,KAGD,qBAAkBF,EAAQ,mBAAoB,IAAM,CAChD,OAAO,SAAS,QAAO,cAAW,IAAI,CAC1C,CAAC,CAET,CACJ,CAAC,CACL,CAEA,gBAAiB,CACb,KAAK,QAAQ,MAAM,EAAE,OACjBG,EAAC,OAAI,MAAM,UACP,UAAAA,EAAC,MAAG,MAAM,8BAA+B,SAAAH,EAAQ,YAAY,KAEzD,oBAAiB,EAAE,QAAa,UAC5BG,EAAC,KAAG,SAAAH,EAAQ,gBAAgB,EAC5BG,EAAC,KAAG,SAAAH,EAAQ,gBAAgB,EAEpCG,EAAC,QACG,SAAAA,EAAC,UAAO,MAAM,wBAAwB,QAASC,GAAK,CAChDA,EAAE,eAAe,EACjB,KAAK,YAAY,CACrB,EAAI,SAAAJ,EAAQ,kBAAkB,EAClC,GACJ,CACJ,CACJ,CACJ,EA1CMD,EAAAD,EAAA",
  "names": ["import_corelib", "pageInit", "SetPasswordPage", "__name", "myTexts", "Texts", "response", "jsx", "e"]
}
