{
  "version": 3,
  "sources": ["../../../../../Modules/Membership/PasswordActions/ChangePasswordPage.tsx", "../../../../../Modules/ServerTypes/Extensions/ChangePasswordForm.ts"],
  "sourcesContent": ["/** @jsxImportSource jsx-dom */\nimport { Texts } from \"@/ServerTypes/Texts\";\nimport { PropertyPanel } from \"@serenity-is/corelib\";\nimport { format, informationDialog, localText, resolveUrl, serviceCall } from \"@serenity-is/corelib\";\nimport { ChangePasswordForm } from \"../../ServerTypes/Extensions/ChangePasswordForm\";\nimport { ChangePasswordRequest } from \"../../ServerTypes/Extensions/ChangePasswordRequest\";\n\nexport default function pageInit() {\n    new ChangePasswordPanel($('#PanelDiv')\n        .addClass('s-container-tight mt-5 s-Form'));\n}\n\nconst myTexts = Texts.Forms.Membership.ChangePassword;\n\nclass ChangePasswordPanel extends PropertyPanel<ChangePasswordRequest, any> {\n\n    protected getFormKey() { return ChangePasswordForm.formKey; }\n\n    private form = new ChangePasswordForm(this.idPrefix);\n\n    constructor(container: JQuery) {\n        super(container);\n\n        this.form.NewPassword.addValidationRule(this.uniqueName, () => {\n            if (this.form.NewPassword.value.length < 7) {\n                return format(localText(\"Validation.MinRequiredPasswordLength\"), 7);\n            }\n        });\n\n        this.form.ConfirmPassword.addValidationRule(this.uniqueName, () => {\n            if (this.form.ConfirmPassword.value !== this.form.NewPassword.value) {\n                return localText(\"Validation.PasswordConfirmMismatch\");\n            }\n        });\n    }\n\n    protected submitClick() {\n        if (!this.validateForm())\n            return;\n\n        var request = this.getSaveEntity();\n        serviceCall({\n            url: resolveUrl('~/Account/ChangePassword'),\n            request: request,\n            onSuccess: () => {\n                informationDialog(myTexts.Success, () => {\n                    window.location.href = resolveUrl('~/');\n                })\n            }\n        })\n    }\n\n    renderContents() {\n        const id = this.useIdPrefix();\n        this.element.empty().append(\n            <div class=\"s-Panel\">\n                <h3 class=\"page-title mb-4 text-center\">{myTexts.FormTitle}</h3>\n                <form id={id.Form} action=\"\">\n                    <div id={id.PropertyGrid}></div>\n                    <div class=\"px-field mt-4\">\n                        <button id={id.SubmitButton} type=\"submit\" class=\"btn btn-primary w-100\"\n                            onClick={e => { e.preventDefault(); this.submitClick() }}>\n                            {myTexts.SubmitButton}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n", "\uFEFFimport { PasswordEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface ChangePasswordForm {\n    OldPassword: PasswordEditor;\n    NewPassword: PasswordEditor;\n    ConfirmPassword: PasswordEditor;\n}\n\nexport class ChangePasswordForm extends PrefixedContext {\n    static readonly formKey = 'Serenity.Extensions.ChangePasswordRequest';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ChangePasswordForm.init)  {\n            ChangePasswordForm.init = true;\n\n            var w0 = PasswordEditor;\n\n            initFormType(ChangePasswordForm, [\n                'OldPassword', w0,\n                'NewPassword', w0,\n                'ConfirmPassword', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "mIAEA,IAAAA,EAA8B,SAC9BA,EAA8E,SCH7E,IAAAC,EAA8D,SAQxD,IAAMC,EAAN,cAAiC,iBAAgB,CAIpD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAmB,KAAO,CAC3BA,EAAmB,KAAO,GAE1B,IAAIE,EAAK,oBAET,gBAAaF,EAAoB,CAC7B,cAAeE,EACf,cAAeA,EACf,kBAAmBA,CACvB,CAAC,CACL,CACJ,CACJ,EAnBaC,EAANH,EAAMI,EAAAD,EAAA,sBAAAA,EACO,QAAU,4CDFf,SAARE,GAA4B,CAC/B,IAAIC,EAAoB,EAAE,WAAW,EAChC,SAAS,+BAA+B,CAAC,CAClD,CAHwBC,EAAAF,EAAA,YAKxB,IAAMG,EAAUC,EAAM,MAAM,WAAW,eAEjCH,EAAN,cAAkC,eAA0C,CAMxE,YAAYI,EAAmB,CAC3B,MAAMA,CAAS,EAHnB,KAAQ,KAAO,IAAIC,EAAmB,KAAK,QAAQ,EAK/C,KAAK,KAAK,YAAY,kBAAkB,KAAK,WAAY,IAAM,CAC3D,GAAI,KAAK,KAAK,YAAY,MAAM,OAAS,EACrC,SAAO,aAAO,aAAU,sCAAsC,EAAG,CAAC,CAE1E,CAAC,EAED,KAAK,KAAK,gBAAgB,kBAAkB,KAAK,WAAY,IAAM,CAC/D,GAAI,KAAK,KAAK,gBAAgB,QAAU,KAAK,KAAK,YAAY,MAC1D,SAAO,aAAU,oCAAoC,CAE7D,CAAC,CACL,CAlBU,YAAa,CAAE,OAAOA,EAAmB,OAAS,CAoBlD,aAAc,CACpB,GAAK,KAAK,aAAa,EAGvB,KAAIC,EAAU,KAAK,cAAc,KACjC,eAAY,CACR,OAAK,cAAW,0BAA0B,EAC1C,QAASA,EACT,UAAW,IAAM,IACb,qBAAkBJ,EAAQ,QAAS,IAAM,CACrC,OAAO,SAAS,QAAO,cAAW,IAAI,CAC1C,CAAC,CACL,CACJ,CAAC,EACL,CAEA,gBAAiB,CACb,IAAMK,EAAK,KAAK,YAAY,EAC5B,KAAK,QAAQ,MAAM,EAAE,OACjBC,EAAC,OAAI,MAAM,UACP,UAAAA,EAAC,MAAG,MAAM,8BAA+B,SAAAN,EAAQ,UAAU,EAC3DM,EAAC,QAAK,GAAID,EAAG,KAAM,OAAO,GACtB,UAAAC,EAAC,OAAI,GAAID,EAAG,aAAc,EAC1BC,EAAC,OAAI,MAAM,gBACP,SAAAA,EAAC,UAAO,GAAID,EAAG,aAAc,KAAK,SAAS,MAAM,wBAC7C,QAASE,GAAK,CAAEA,EAAE,eAAe,EAAG,KAAK,YAAY,CAAE,EACtD,SAAAP,EAAQ,aACb,EACJ,GACJ,GACJ,CACJ,CACJ,CACJ,EAvDMD,EAAAD,EAAA",
  "names": ["import_corelib", "import_corelib", "_ChangePasswordForm", "prefix", "w0", "ChangePasswordForm", "__name", "pageInit", "ChangePasswordPanel", "__name", "myTexts", "Texts", "container", "ChangePasswordForm", "request", "id", "jsx", "e"]
}
