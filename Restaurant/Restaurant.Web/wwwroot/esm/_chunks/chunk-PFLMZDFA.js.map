{
  "version": 3,
  "sources": ["../../../Modules/Default/Product/ImageViewerFormatter.ts", "../../../Modules/ServerTypes/Default/CategoryMealsColumns.ts", "../../../Modules/ServerTypes/Default/CategoryMealsRow.ts", "../../../Modules/ServerTypes/Default/CategoryMealsService.ts", "../../../Modules/Default/CategoryMeals/CategoryMealsDialog.ts", "../../../Modules/ServerTypes/Default/CategoryMealsForm.ts"],
  "sourcesContent": ["import { Decorators, Formatter, Lookup, resolveUrl } from \"@serenity-is/corelib\";\r\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\r\n\r\n\r\n@Decorators.registerFormatter('Restaurant,ImageViewerFormatter')\r\n\r\nexport class ImageViewerFormatter implements Formatter {\r\n    format(ctx: FormatterContext) {\r\n        let imagepath = ctx.value;\r\n        let src = resolveUrl(\"~/upload/\" + imagepath)\r\n        if (!imagepath)\r\n            return `<span class =\"text-danger\"><i class=\"fa af-thums-down\"></i></span>`\r\n\r\n        return `<a class=\"inline-image\" target = '_blank' href= \"${src}\"><img src=\"${src}\" width= \"40\" height =\"40\"></a>`;\r\n\r\n    }\r\n}", "\uFEFFimport { ImageViewerFormatter } from \"@/Default/Product/ImageViewerFormatter\";\nimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { CategoryMealsRow } from \"./CategoryMealsRow\";\n\nexport interface CategoryMealsColumns {\n    Id: Column<CategoryMealsRow>;\n    CategoryMealsName: Column<CategoryMealsRow>;\n    Photo: Column<CategoryMealsRow>;\n    Description: Column<CategoryMealsRow>;\n}\n\nexport class CategoryMealsColumns extends ColumnsBase<CategoryMealsRow> {\n    static readonly columnsKey = 'Default.CategoryMeals';\n    static readonly Fields = fieldsProxy<CategoryMealsColumns>();\n}\n\n[ImageViewerFormatter]; // referenced types", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CategoryMealsRow {\n    Id?: number;\n    CategoryMealsName?: string;\n    Photo?: string;\n    Description?: string;\n}\n\nexport abstract class CategoryMealsRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'CategoryMealsName';\n    static readonly localTextPrefix = 'Default.CategoryMeals';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<CategoryMealsRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { CategoryMealsRow } from \"./CategoryMealsRow\";\n\nexport namespace CategoryMealsService {\n    export const baseUrl = 'Default/CategoryMeals';\n\n    export declare function Create(request: SaveRequest<CategoryMealsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CategoryMealsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoryMealsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoryMealsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Default/CategoryMeals/Create\",\n        Update: \"Default/CategoryMeals/Update\",\n        Delete: \"Default/CategoryMeals/Delete\",\n        Retrieve: \"Default/CategoryMeals/Retrieve\",\n        List: \"Default/CategoryMeals/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CategoryMealsService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { CategoryMealsForm } from '../../ServerTypes/Default/CategoryMealsForm';\r\nimport { CategoryMealsRow } from '../../ServerTypes/Default/CategoryMealsRow';\r\nimport { CategoryMealsService } from '../../ServerTypes/Default/CategoryMealsService';\r\n\r\n@Decorators.registerClass('Restaurant.Default.CategoryMealsDialog')\r\nexport class CategoryMealsDialog extends EntityDialog<CategoryMealsRow, any> {\r\n    protected getFormKey() { return CategoryMealsForm.formKey; }\r\n    protected getRowDefinition() { return CategoryMealsRow; }\r\n    protected getService() { return CategoryMealsService.baseUrl; }\r\n\r\n    protected form = new CategoryMealsForm(this.idPrefix);\r\n}", "\uFEFFimport { StringEditor, ImageUploadEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface CategoryMealsForm {\n    CategoryMealsName: StringEditor;\n    Photo: ImageUploadEditor;\n    Description: StringEditor;\n}\n\nexport class CategoryMealsForm extends PrefixedContext {\n    static readonly formKey = 'Default.CategoryMeals';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CategoryMealsForm.init)  {\n            CategoryMealsForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = ImageUploadEditor;\n\n            initFormType(CategoryMealsForm, [\n                'CategoryMealsName', w0,\n                'Photo', w1,\n                'Description', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "6DAAA,IAAAA,EAA0D,SAMnD,IAAMC,EAAN,KAAgD,CACnD,OAAOC,EAAuB,CAC1B,IAAIC,EAAYD,EAAI,MAChBE,KAAM,cAAW,YAAcD,CAAS,EAC5C,OAAKA,EAGE,oDAAoDC,CAAG,eAAeA,CAAG,kCAFrE,oEAIf,CACJ,EAVuDC,EAAAJ,EAAA,wBAA1CA,EAANK,EAAA,CAFN,aAAW,kBAAkB,iCAAiC,GAElDL,GCLb,IAAAM,EAAyC,SAWlC,IAAMC,EAAN,MAAMA,UAA6B,aAA8B,CAGxE,EAHwEC,EAAAD,EAAA,wBAA3DA,EACO,WAAa,wBADpBA,EAEO,UAAS,eAAkC,EAFxD,IAAME,EAANF,ECZN,IAAAG,EAA4B,SAStB,IAAeC,EAAf,MAAeA,CAAiB,CAUvC,EAVuCC,EAAAD,EAAA,oBAAjBA,EACF,WAAa,KADXA,EAEF,aAAe,oBAFbA,EAGF,gBAAkB,wBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAA8B,EATpD,IAAeE,EAAfF,ECTN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,wBAQVA,EAAA,QAAU,CACnB,OAAQ,+BACR,OAAQ,+BACR,OAAQ,+BACR,SAAU,iCACV,KAAM,4BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAsBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAChD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAyC,SCDxC,IAAAC,EAA+E,SAQzE,IAAMC,EAAN,MAAMA,UAA0B,iBAAgB,CAInD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAkB,KAAO,CAC1BA,EAAkB,KAAO,GAEzB,IAAIE,EAAK,eACLC,EAAK,uBAET,gBAAaH,EAAmB,CAC5B,oBAAqBE,EACrB,QAASC,EACT,cAAeD,CACnB,CAAC,CACL,CACJ,CACJ,EApBuDE,EAAAJ,EAAA,qBAA1CA,EACO,QAAU,wBADvB,IAAMK,EAANL,EDDA,IAAMM,EAAN,cAAkC,cAAoC,CAAtE,kCAKH,KAAU,KAAO,IAAIC,EAAkB,KAAK,QAAQ,EAJ1C,YAAa,CAAE,OAAOA,EAAkB,OAAS,CACjD,kBAAmB,CAAE,OAAOC,CAAkB,CAC9C,YAAa,CAAE,OAAOC,EAAqB,OAAS,CAGlE,EAN6EC,EAAAJ,EAAA,uBAAhEA,EAANK,EAAA,CADN,aAAW,cAAc,wCAAwC,GACrDL",
  "names": ["import_corelib", "ImageViewerFormatter", "ctx", "imagepath", "src", "__name", "__decorateClass", "import_corelib", "_CategoryMealsColumns", "__name", "CategoryMealsColumns", "import_corelib", "_CategoryMealsRow", "__name", "CategoryMealsRow", "import_corelib", "CategoryMealsService", "x", "r", "s", "o", "import_corelib", "import_corelib", "_CategoryMealsForm", "prefix", "w0", "w1", "__name", "CategoryMealsForm", "CategoryMealsDialog", "CategoryMealsForm", "CategoryMealsRow", "CategoryMealsService", "__name", "__decorateClass"]
}
