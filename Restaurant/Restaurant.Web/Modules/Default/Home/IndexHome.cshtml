@using Microsoft.EntityFrameworkCore;
@using Restaurant.Models;
@model List<Restaurant.Models.Product>

@inject ITextLocalizer Localizer
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_myNewLayout";
}
<link href="~/cartshoping/css/meals.css" rel="stylesheet" />

<style>

    .categoryMeals{
        display: flex;
        align-items: baseline;
        flex-direction: row;
        flex-wrap: wrap;
        align-content: stretch;
        justify-content: start;
        justify-items: stretch;
    } 
/*     .menu-section{
        height: 390px;
        margin-left: -7px;
        height: 390px;
        display: flex;
        flex-wrap: wrap;
        align-content: revert-layer;
        justify-content: flex-start;
        flex-direction: column;
    }
   */
      .section-title {
        color: black;
        font-size: 24px;
        margin-top: 0;
        margin-bottom: 20px;
        text-align:center;
    }

    .menu-items {
        list-style-type: none;
        padding: 0;
        margin-left: 30px;
    }

    .category {
        color: #555;
        font-size: 18px;
        margin-bottom: 10px;
    }

    .sub-items {
        list-style-type: none;
        padding-left: 20px;
        margin-top: 5px;
    }

        .sub-items li {
            color: #777;
            margin-bottom: 10px;
        }

            .sub-items li img {
                width: 50px; 
                height: 50px; 
                margin-right: 10px;
                vertical-align: middle;
            }

    .services1{
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        margin: 23px 10px;
        box-shadow: 3px 4px 100px rgba(0, 0, 0,0.2);
        transition: box-shadow 0.3s ease;
    }

    .services1:hover {
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }


    #showNext, #showPrev {
        margin-top: 20px;
        background-color: #f2745f;
    }

    #showNextCategory, #showPrevCategory {
        margin-top: 20px;
        background-color: #f2745f;
    }
</style>

<section class="banner">
    <div class="container">
        <div class="row">
            <div class="col-md-6 col-md-offset-3">
                <h4> @Localizer.Get("Here you can find delecious foods")</h4>
                <h2>@Localizer.Get("Asian Restaurant")</h2>
                <p>@Localizer.Get("The most delicious food and delicious meals").</p>
                <div class="primary-button">
                    <a asp-action="Index" asp-controller="OurMenus">@Localizer.Get("Order Right Now")</a>
                </div>
            </div>
        </div>
    </div>
</section>



<section class="cook-delecious">
    <div class="container">
        <div class="row">
            <div class="col-md-3 col-md-offset-1">
                <div class="first-image">
                    <img src="~/Locanta/img/cook_01.jpg" alt="">
                </div>
            </div>
            <div class="col-md-4">
                <div class="cook-content">
                    <h4>@Localizer.Get("We cook delecious")</h4>
                    <div class="contact-content">
                        <span>@Localizer.Get("You can call us on"):</span>
                        @foreach (var brand in ViewBag.Brands)
                        {
                            if (brand.PhoneNember == null)
                            {
                                <h6>+9000000000</h6>
                            }
                            else
                            {
                                <h6>@brand.PhoneNember</h6>
                            }                        }
                            
                        
                    </div>
                    <span>@Localizer.Get("or")</span>
                    <div class="primary-white-button">
                        <a asp-action="Index" asp-controller="OurMenus">@Localizer.Get("Order Now")</a>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="second-image">
                    <img src="~/Locanta/img/cook_02.jpg" alt="">
                </div>
            </div>
        </div>
    </div>
</section>


<section class="services ">
    <div class="container" >

        <div class="category-menu-section row" id="categoriesContainer">


            @{
                locantaContext db = new locantaContext();
                var model = db.Categories;
            }

           
                
            @foreach (var category in model)
            {
                <div class="categorymenui col-md-4 col-lg-3 col-sm-4 col-xs-6  menuindex ">
                    <div class="service-item">
                        <a asp-controller="CategoryView" asp-action="Index" asp-route-id="@category.Id">
                          
                            <img src="/upload/@category.Photo" alt="">
                            
                            <h4><a asp-controller="CategoryView" asp-action="Index" asp-route-id="@category.Id"> @Localizer.Get(category.CategoryName) </a></h4>
                        </a>
                    </div>
                </div>
            }
               
        </div>
        <div class="text-center mt-4">
            <button id="showPrevCategory" class="btn ">
                <i class="fa fa-arrow-left"></i>
            </button>
            <button id="showNextCategory" class="btn ">
                <i class="fa fa-arrow-right"></i>
            </button>
        </div>
         
    </div>
</section>


<section style="    margin: 0px 36px;">
    <div class="container">
        <h2 class="section-title text-center">@Localizer.Get("Menu") - @Localizer.Get("Meals")</h2>
        <div class="menu-section row">
            @{
                var CategoryMeals = db.CategoryMeals.Include(x=>x.Meals);
            }
            @foreach (var catMeals in CategoryMeals)
            {
                <div class=" menui col-lg-3 col-md-6 col-sm-6">
@*                     <h3>@Localizer.Get(catMeals.CategoryMealsName)</h3>
 *@                    <ul class="list-group">
                        @foreach (var meal in catMeals.Meals)
                        {
                            <li class="list-group-item">
                                <a class="nav-link" asp-controller="MealsView" asp-action="Index" asp-route-id="@meal.Id" style="display:flex; width:100%">
                                    <img src="/upload/@meal.Photo" class="img-fluid" style="max-width: 46%;border-radius: 123%;height: 56px;" alt="@meal.MealsName">
                                    @Localizer.Get(meal.MealsName)
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>

        <div class="text-center mt-4">
            <button id="showPrev" class="btn ">
                <i class="fa fa-arrow-left"></i> 
            </button>
            <button id="showNext" class="btn ">
                <i class="fa fa-arrow-right"></i>
            </button>
        </div>
    </div>
</section>

 
@*   فلترة االايتم حسب الوجبة
 *@




<section style="text-align:center" class="services">
    <h2 style="margin-bottom:30px; margin-top:30px;">@Localizer.Get("PORTFOLIO")</h2>
    <div id="myBtnContainer" class="myBtnContainer">
        <button class="btn active" onclick="filterSelection('all')">@Localizer.Get("Show all") </button>
        @{
          
            var itemsList = ViewBag.Meals as IEnumerable<dynamic>; // تحويل ViewBag.Items إلى IEnumerable
            var groupedItems = itemsList.GroupBy(meal => meal.CategoryMealsId);
            // عرض الأزرار بناءً على الوجبات
            var CategoryMealsName = db.CategoryMeals;

            foreach (var meal in CategoryMealsName)
            {
                var itemId = meal.Id;
                var mealItems = groupedItems.FirstOrDefault(g => g.Key == itemId)?.ToList();
                if (mealItems != null)
                {
                    <button class="btn" onclick="filterSelection('@itemId')">@Localizer.Get(meal.CategoryMealsName)</button>
                }
            }
        }
    </div>
    <div class="container">
    <div class="row  mealsrow">
            @{
                // عرض العناصر باستخدام الفلترة بناءً على الأزرار
                foreach (var mealGroup in groupedItems)
                {
                    var mealId = mealGroup.Key;
                    var mealItems =mealGroup.ToList();
                    foreach (var item in mealItems)
                    {
                        <div class="col-lg-3 col-md-6 col-sm-6 column columnmeals @mealId" >
                            <div class="content">
                            <a class="" asp-controller="MealsView" asp-action="Index" asp-route-id="@item.Id">
                                <img src="/upload/@item.Photo" alt="" style="width:100%    ;height:175px; border-radius:4px;">

                                 <h4>@item.MealsName</h4>
                                
                                <p>@item.Description</p>
                            </a>
                        </div>
                    </div>
                }
            }
        }
    </div>
    </div>
</section>




<script>
    filterSelection("all"); // تنفيذ الوظيفة وعرض جميع الأعمدة

    function filterSelection(c) {
        var x, i;
        x = document.getElementsByClassName("column");
        if (c == "all") {
            c = "";
        }
        // إضافة فئة "show" (عرض: block) للعناصر المصفاة وإزالة فئة "show" من العناصر غير المحددة
        for (i = 0; i < x.length; i++) {
            w3RemoveClass(x[i], "show");
            if (x[i].className.indexOf(c) > -1) w3AddClass(x[i], "show");
        }
    }

    // Show filtered elements
    function w3AddClass(element, name) {
        var i, arr1, arr2;
        arr1 = element.className.split(" ");
        arr2 = name.split(" ");
        for (i = 0; i < arr2.length; i++) {
            if (arr1.indexOf(arr2[i]) == -1) {
                element.className += " " + arr2[i];
            }
        }
    }

    // Hide elements that are not selected
    function w3RemoveClass(element, name) {
        var i, arr1, arr2;
        arr1 = element.className.split(" ");
        arr2 = name.split(" ");
        for (i = 0; i < arr2.length; i++) {
            while (arr1.indexOf(arr2[i]) > -1) {
                arr1.splice(arr1.indexOf(arr2[i]), 1);
            }
        }
        element.className = arr1.join(" ");
    }
</script>



<script>
    var currentOffset = 0;
    var itemsPerPage = 4; // عدد العناصر التي تريد عرضها في كل مرة

    // عند الضغط على الزر "Show Next"
    document.getElementById("showNextCategory").addEventListener("click", function () {
        var menuItems = document.querySelectorAll(".category-menu-section .categorymenui");
        var maxOffset = Math.ceil(menuItems.length / itemsPerPage) - 1;

        if (currentOffset < maxOffset) {
            currentOffset++;
            updateMenuDisplay(menuItems);
        }
    });

    // عند الضغط على الزر "Show Previous"
    document.getElementById("showPrevCategory").addEventListener("click", function () {
        if (currentOffset > 0) {
            currentOffset--;
            var menuItems = document.querySelectorAll(".category-menu-section .categorymenui");
            updateMenuDisplay(menuItems);
        }
    });

    // تحديث عرض العناصر في القائمة بناءً على الإزاحة الحالية
    function updateMenuDisplay(menuItems) {
        var startIndex = currentOffset * itemsPerPage;
        var endIndex = startIndex + itemsPerPage;

        // إخفاء جميع العناصر
        menuItems.forEach(function (item) {
            item.style.display = "none";
        });

        // عرض العناصر في النطاق الحالي
        for (var i = startIndex; i < endIndex && i < menuItems.length; i++) {
            menuItems[i].style.display = "block";
        }
    }

    // تحديث عرض القائمة عند تحميل الصفحة لعرض العناصر الأولى
    document.addEventListener("DOMContentLoaded", function () {
        var menuItems = document.querySelectorAll(".category-menu-section .categorymenui");
        updateMenuDisplay(menuItems);
    });
</script>



<script>
    var currentOffset = 0;
    var itemsPerPage = 4; // عدد العناصر التي تريد عرضها في كل مرة

    // عند الضغط على الزر "Show Next"
    document.getElementById("showNext").addEventListener("click", function () {
        var menuItems = document.querySelectorAll(".menu-section .menui");
        var maxOffset = Math.ceil(menuItems.length / itemsPerPage) - 1;

        if (currentOffset < maxOffset) {
            currentOffset++;
            updateMenuDisplay(menuItems);
        }
    });

    // عند الضغط على الزر "Show Previous"
    document.getElementById("showPrev").addEventListener("click", function () {
        if (currentOffset > 0) {
            currentOffset--;
            var menuItems = document.querySelectorAll(".menu-section .menui");
            updateMenuDisplay(menuItems);
        }
    });

    // تحديث عرض العناصر في القائمة بناءً على الإزاحة الحالية
    function updateMenuDisplay(menuItems) {
        var startIndex = currentOffset * itemsPerPage;
        var endIndex = startIndex + itemsPerPage;

        // إخفاء جميع العناصر
        menuItems.forEach(function (item) {
            item.style.display = "none";
        });

        // عرض العناصر في النطاق الحالي
        for (var i = startIndex; i < endIndex && i < menuItems.length; i++) {
            menuItems[i].style.display = "block";
        }
    }

    // تحديث عرض القائمة عند تحميل الصفحة لعرض العناصر الأولى
    document.addEventListener("DOMContentLoaded", function () {
        var menuItems = document.querySelectorAll(".menu-section .menui");
        updateMenuDisplay(menuItems);
    });
</script>














@* <section style="text-align:center">
    <h2 style="margin-bottom:30px; margin-top:30px;">PORTFOLIO</h2>
    <div id="myBtnContainer" class="myBtnContainer">

        <button class="btn active" onclick="filterSelection('all')"> Show all</button>
        @{
            var mealsList = ViewBag.CategoryMeals as IEnumerable<dynamic>; // تحويل ViewBag.Meals إلى IEnumerable
            var groupedMeals = mealsList.GroupBy(meal => meal.Id);
            // عرض الأزرار بناءً على الوجبات
            foreach (var meal in ViewBag.CategoryMeals)
            {
                var mealId = meal.Id;
                var mealItems = groupedMeals.FirstOrDefault(g => g.Key == mealId)?.ToList();
                if (mealItems != null)
                {
                    <button class="btn" onclick="filterSelection('@mealId', this)">@meal.CategoryMealsName</button>
                }
            }
        }
    </div>
    <div class="row">
        @{
           // عرض الوجبات باستخدام الفلترة بناءً على الأزرار
            foreach (var mealGroup in groupedMeals)
            {
                var mealId = mealGroup.Key;
                var meals = mealGroup.ToList();
                foreach (var meal in meals)
                {
                    <div class="column @mealId">
                        <a class="" asp-controller="MealsView" asp-action="Index" asp-route-id="@meal.Meals.Id"><img class="imagemeal" style="border-radius:20px;" src="/upload/@meal.Photo" alt=""></a>
                        <div class="content">
                            <a asp-controller="MealsView" asp-action="Index" asp-route-id="@meal.Id"><h3>@meal.Meal.MealsName</h3></a>
                            <p>@meal.Description</p>
                            <div>
                                @if (meal.PriceBefor != null)
                                {
                                    <span class=""><s style="color:#800000;">@meal.PriceBefor <span class="" style="color:#800000;">@meal.Currency</span></s></span>

                                }
                                <span class="">@meal.Price<span class="">@meal.Currency</span></span>


                            </div>
                        </div>
                    </div>
                }
            }
        }
    </div>
</section> *@



@* <script>
    filterSelection("all"); // تنفيذ الوظيفة وعرض جميع الأعمدة

    function filterSelection(c) {
        var x, i;
        x = document.getElementsByClassName("column");
        if (c == "all") {
            c = "";
        }
        // إضافة فئة "show" (عرض: block) للعناصر المصفاة وإزالة فئة "show" من العناصر غير المحددة
        for (i = 0; i < x.length; i++) {
            w3RemoveClass(x[i], "show");
            if (x[i].className.indexOf(c) > -1) w3AddClass(x[i], "show");
        }
    }

    // Show filtered elements
    function w3AddClass(element, name) {
        var i, arr1, arr2;
        arr1 = element.className.split(" ");
        arr2 = name.split(" ");
        for (i = 0; i < arr2.length; i++) {
            if (arr1.indexOf(arr2[i]) == -1) {
                element.className += " " + arr2[i];
            }
        }
    }

    // Hide elements that are not selected
    function w3RemoveClass(element, name) {
        var i, arr1, arr2;
        arr1 = element.className.split(" ");
        arr2 = name.split(" ");
        for (i = 0; i < arr2.length; i++) {
            while (arr1.indexOf(arr2[i]) > -1) {
                arr1.splice(arr1.indexOf(arr2[i]), 1);
            }
        }
        element.className = arr1.join(" ");
    }
</script> *@










@* <section class="featured-food">
    <div class="container">
        <div class="row">
            <div class="heading">
                <h2>Weekly Featured Food</h2>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                 @foreach (var category in model)
                {
                <div class="food-item">
                        <h2><a asp-controller="Category" asp-action="Index" asp-route-id="@category.Id"> @Localizer.Get(category.CategoryName) </a></h2>
                        <img src="~/Locanta/img/breakfast_item.jpg" alt="">
                    <div class="price">$4.50</div>
                    <div class="text-content">
                        <h4>Kale Chips Art Party</h4>
                        <p>Dreamcatcher squid ennui cliche chicharros nes echo  small batch jean shorts hexagon street art knausgaard wolf...</p>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>
</section> *@